{"meta":{"title":"Aaron's blog","subtitle":"潇洒自在，任性逍遥。我就是我，不一样的烟火～","description":null,"author":"Aaron","url":"kabibi.github.io"},"pages":[{"title":"tags","date":"2018-01-08T07:20:45.000Z","updated":"2018-01-08T07:21:01.970Z","comments":true,"path":"tags/index.html","permalink":"kabibi.github.io/tags/index.html","excerpt":"","text":""},{"title":"categories","date":"2018-01-08T07:18:57.000Z","updated":"2018-01-08T07:19:41.862Z","comments":true,"path":"categories/index.html","permalink":"kabibi.github.io/categories/index.html","excerpt":"","text":""}],"posts":[{"title":"《小狗钱钱》——一只狗带领你全家致富","slug":"2018-01-04-reading-note-001","date":"2018-01-04T01:40:22.000Z","updated":"2018-01-08T07:06:25.209Z","comments":true,"path":"2018/01/04/2018-01-04-reading-note-001/","link":"","permalink":"kabibi.github.io/2018/01/04/2018-01-04-reading-note-001/","excerpt":"这本书讲的主要是一只名叫钱钱的小狗，它和其他的小狗有一点点的不同，他会说人话。并且借着会说话的本事带领本书的主人公——一个12岁的小女孩以及她全家共同致富的故事。","text":"这本书讲的主要是一只名叫钱钱的小狗，它和其他的小狗有一点点的不同，他会说人话。并且借着会说话的本事带领本书的主人公——一个12岁的小女孩以及她全家共同致富的故事。 本书从名字上看起来像一个略显幼稚的童话故事，但实际上这是一本通俗易懂，并且将难以理解的大道理融汇在故事中的理财书籍。 要说我去读这本书的原由，前段时间听到过一句话，“你不理财，财不理你”。于是便心生理财的念头，在知乎上偶然看到有人推荐这本书，于是便借之一读，于是这本书便成了我第一本理财书籍。这本书文字简单通俗易懂，前前后后读完花了3～4天的时间，读完也算略有收获，这本书也算开启了我的理财人生，希望能够透过这本书，开始我的开挂人生。 现在想总结我从这本书中得到的几个收获： 理财之前，首先要建立起自信 实现财务自由是每个人都要尽快实现的目标。财务自由是今天每个人都可能实现的目标，当然这需要我们拥有追求自己真正想要的生活的勇气。正如一句名言所说：“并非困难使我们放弃，而是因为我们放弃，才显得如此困难。”以前准备考研的时候，看过朱伟老师的视频，他给我最大的印象不是那些黄段子，而是一个很有个性和想法的人。他在视频里经常提到，“先有财务自由，再有人生自由”。一个人真正自由成熟的时候，是能够自己挣钱养家，许多人喜欢啃老，即便有能力实现财务自由。他们究是一个肢体上的成年人，思想上的巨婴。 知道自己想要什么，不要模糊了事。经常和朋友一起吃饭，问道吃什么，我说随便，可是到了饭店才发现桌上都是自己不喜欢吃的东西，于是度过了一个难过的中午。谈到自己想要怎样的一个女朋友，我说随便，是女的就行，结果别人介绍的又让自己又难过了一整天。我相信这些不是我自己一个人才有过的经历。大多数人不知道想要什么，他们只知道，自己还想要更多的东西。书中提供的一种方法就是：写一张愿望清单，每天都把这张写着自己的愿望的单子从头到尾看一遍，它会不断地提醒你自己想得到什么，那么你就会密切关注一切可以帮助你实现这些愿望的机遇了。 当你决定做一件事情的时候，你必须在72小时之内完成，否则你很可能永远不会再做了。 小狗钱钱鼓励吉娅建立自信的方法就是：建立成功笔记。把自己曾经做过的每一件成功的事情都写在成功日记中，当你觉得自卑的时候，就不断地翻开这本日记，你就会获得莫大的成就感。 理财中的一些建议 一个金蛋的故事：有一个农家小伙儿，他每天的愿望就是从鹅笼里拣一个鹅蛋当早饭。有一天，他竟然在鹅笼里发现了一只金蛋。一开始他当然不敢相信自己的眼睛。他想，也许是有人在捉弄他。为了谨慎起见，他把金蛋拿去让金匠辨别，可是金匠向他保证说，这只金蛋完完全全是金子铸成的。于是，这个农家小伙儿就卖了这只金蛋，举行了一个盛大的庆祝会。第二天清晨，他起了一个大早，赶到鹅笼里一看，那里果真又放着一个金蛋，这样的情况延续了好几天。可是这个小伙儿是一个贪婪的人，他抱怨自己的鹅，因为鹅没办法向他解释是怎么下出这个蛋的，否则他也许可以制造金蛋。他还气呼呼的想，这只懒惰的鹅每天至少应该下两只金蛋。他觉得这样的速度太慢了。他的怒火越来越大，最后，他终于怒不可遏地把鹅揪出笼子劈成了两半。自那以后，他再也得不到金蛋了。 基金和股票是很好的理财方式，保险起见，选择基金。挑选基金时的注意事项： 1. 基金应该至少有10年历史。假如它在这么长时间内一直有丰厚的利润，那我们可以认为，未来它也会运作良好。2. 应该选择大型的跨国股票基金。这种基金在世界各地购买股票，以此分散风险，所以十分安全。 3. 对基金的走势图进行比较。我们应该观察在过去10年间哪些基金的年终利润最好。 保证基金收益的安全至少要存入五年或者更多，所以只能把不是马上要用的钱投进基金里。 72定理：用72除以投资的年收益率的百分比，得出的数就是这笔钱翻倍所要的年数。 不要在意暂时的亏损，不要忘了你有五年甚至十年的时间，在这么多年之后，它一定会保证你的收益。暂时的亏损只是“冬天”的来临，春天是早晚都要来的，所以不要急于卖出。 在暂时亏损，也就是相对于之前的涨幅有所跌落的时候，或许是买进的时机，但不要投入大笔钱，因为没有人能够确定这就是最低的时候。 不要把鸡蛋放入同一个篮子”，同样道理，不要把你的鹅放入同一家基金或者股票。 笔记摘抄所有人都希望自己变得富有一些，只是有些人的这一愿望更为强烈，而有些人却假装自己满足于现在的生活。事实上，大多数人都希望自己更幸福、更成功，也想拥有更多的钱。 不是努力去挖掘故事情节之后隐藏的生活原则，而是试图模仿书中主人公获取成功的举动。成功的故事很少有精彩的翻版，但是故事中包含的道理却可以帮助我们在遭遇困境时找到最佳的出路。 一旦丰厚的资产开始流动，其速度之快和数量之大都可能让你吃惊：以前它们都藏到哪里去了？ 并非困难使我们放弃，而是因为我们放弃，才显得如此困难。 财务自由是今天每个人都可能实现的目标，当然这需要我们拥有追求自己真正想要的生活的勇气。正如一句名言所说：“并非困难使我们放弃，而是因为我们放弃，才显得如此困难。” 大多数人并不清楚自己想要的是什么，他们只知道，自己想得到更多的东西。你可以把自己的生活想象成一家很大的邮购公司。如果你给一家邮购公司写信说‘请给我寄一些好东西来’，你肯定什么都得不到。我们的愿望也是一样。我们必须确切地知道自己心里渴望的是什么才行。” 从现在开始，你必须每天都把这张写着自己的愿望的单子从头到尾看一遍，它会不断地提醒你自己想得到什么，那么你就会密切关注一切可以帮助你实现这些愿望的机遇了。 好奇是好的，但是绝不能让好奇阻碍你做事。太多的人做事犹豫不决，就是因为他们觉得没有完全弄懂这件事。真正付诸实践要比纯粹的思考有用多了。 如果你只是抱着试试看的心态，那么你只会以失败告终，你会一事无成。‘尝试’纯粹是一种借口，你还没有做，就已经给自己想好了退路。不能试验，你只有两个选择—做或者不做。” 我们对一件事投入的精力越多，成功的可能性也越大。可是大多数人把精力放在自己并不喜欢的事情上，而不去想象自己希望得到的东西。 有一只海鸥曾经对我说过：‘在你展翅飞翔之前，你就必须相信自己能到达目的地。’你必须设想自己已经拥有了这些东西，这样你的一个小愿望才会变成一种强烈的渴望。你想象得越多，你的愿望就越强烈，那么你就会开始寻找机会来实现自己的梦想。 知道如何去实现并不是目前最重要的事情。最重要的是，你真的有这样的愿望，否则你一遇到困难就会放弃了。 不去寻找机会的人，最多不过是在走运的时候捡到天上掉下来的馅饼。 首先，在遇到困难的时候，仍然要坚持自己的想法。一切正常的时候，每个人都能做到这一点。只有当真正的困难出现时才能见分晓。只有少数人能坚定不移地贯彻自己的计划。那些非常成功的人，甚至有能力在他们最困难的时候作出最杰出的表现。 你看，有成千上万件事情可能让你分心，因此你每天应该在固定的时间里，有规律地做这些事情。 当你得到带拿破仑散步的工作时，你的喜悦让你忘记了该做的事。你看，有成千上万件事情可能让你分心，因此你每天应该在固定的时间里，有规律地做这些事情。” 当你决定做一件事情的时候，你必须在72小时之内完成，否则你很可能永远不会再做了。 你干的活最多只值报酬的一半，另一半报酬源于你的想法和实施这个想法的勇气。 我生命中出现了最美好的东西，是因为我做了原本不敢做的。 最珍贵的礼物是我们自己争取来的。克服了丢面子的恐惧，世界就会向你敞开大门！” 可是还有一点，你不能在困难面前逃跑。困难、犯错误和丢面子引起的恐惧已经破坏了无数人的生活。” 说：“恐惧总是出现在我们设想事情会如何不顺的时候。我们对恐惧总是出现在我们设想事情会如何不顺的时候。我们对失败的可能性想得越多，就会越害怕。而当你看着自己的成功日记时，你就会注意到那些成功的事情，自然而然也就会想到应该怎样去做。” 当你朝着积极的目标去思考的时候，就不会心生畏惧。 挑选基金时的注意事项： 1. 基金应该至少有10年历史。假如它在这么长时间内一直有丰厚的利润，那我们可以认为，未来它也会运作良好。2. 应该选择大型的跨国股票基金。这种基金在世界各地购买股票，以此分散风险，所以十分安全。 3. 对基金的走势图进行比较。我们应该观察在过去10年间哪些基金的年终利润最好。 不要为失去的东西而忧伤，而要对拥有它的时光心存感激。 从小开始赚钱的人拥有对依赖思想的抵抗力，不会乐意让别人来养活自己。而且自己赚钱的人不会成为不断膨胀的消费欲望的奴隶。从事商业活动有助于人们以理智的态度珍惜和使用有限的资源。 我们推崇一种聪明的、简朴的生活方式。也就是说，宁愿购买一件一流产品，也不要不停地买许多的二流产品。而且，不要仅仅因为一件产品的外观不再时髦而新产品正在流行，就不断追逐新鲜的东西。 分析企业家的传记，有一点很引人注目。绝大多数敢于投身商业活动的人，在童年时期就已经拥有了一些自己的想法，具有某种“怪癖”，而且善于思考。他们之中的大多数人有过小规模的经营管理的实践经验，参与过小型的经济活动。","categories":[{"name":"读书笔记","slug":"读书笔记","permalink":"kabibi.github.io/categories/读书笔记/"}],"tags":[{"name":"读书","slug":"读书","permalink":"kabibi.github.io/tags/读书/"}]},{"title":"Python实现的图片按时间归类","slug":"2016-04-28-python-categirized-photos","date":"2016-04-28T06:10:00.000Z","updated":"2018-01-08T07:06:25.201Z","comments":true,"path":"2016/04/28/2016-04-28-python-categirized-photos/","link":"","permalink":"kabibi.github.io/2016/04/28/2016-04-28-python-categirized-photos/","excerpt":"來到臺灣之後四處遊學，照片真是越來越多了，怎麼也有幾千張了吧。再加上和前幾年的照片混雜在一起，有時候想看看5年前自己長什麼蠢樣，無奈卻找不到照片～","text":"來到臺灣之後四處遊學，照片真是越來越多了，怎麼也有幾千張了吧。再加上和前幾年的照片混雜在一起，有時候想看看5年前自己長什麼蠢樣，無奈卻找不到照片～ 於是就像不如用Python寫一個腳本，把所有的照片按照時間進行分類。 一、背景安裝exifread模塊我們將會使用到exifread模塊，在Ubuntu下，它的安裝命令如下： 1sudo pip install exifread 什麼是Exif?現在我們用手機/數碼相機進行拍照，一般可以直接從文件的名稱就可以看出這張照片的拍照時間，但是如果我們修改了文件的名稱，是不是就不知道這張照片什麼時候拍的了？ 顯然不是。通常我們查看照片的屬性，就可以直接看到Width, Height, Maker, Flash, ISO, White balance, Focal length這些參數信息。這些信息顯然一定存儲在照片的某個位置。我們實現對照片進行分類，就要通過某種方法，獲得這些信息。 這些信息就存儲在Exif中，至於Exif是什麼，我們來看Wiki的解釋。 可交换图像文件格式常被简称为Exif（Exchangeable image file format），是专门为数码相机的照片设定的，可以记录数码照片的属性信&gt;息和拍摄数据。 Exif可以附加于JPEG、TIFF、RIFF等文件之中，为其增加有关数码相机&gt;拍摄信息的内容和索引图或图像处理软件的版本信息。 Windows7操作系统具备对Exif的原生支持，通过鼠标右键点击图片打开&gt;菜单，点击属性并切换到详细信息标签下即可直接查看Exif信息。 Exif信息是可以被任意编辑的，因此只有参考的功能。 Exif信息以0xFFE1作为开头标记，后两个字节表示Exif信息的长度。所以Exif信息最大为64 kB，而内部采用TIFF格式。 二、其他的一些小問題編程之前，我們還有一些小問題需要解決～ 1. 如何獲得照片的屬性？1234import exifreadfile = open('1.jpg')tags = exifread.process_file(file)print tags.keys() 輸出如下： [‘EXIF ApertureValue’, ‘Image ExifOffset’, ‘EXIF ComponentsConfiguration’, ‘EXIF FlashPixVersion’, ‘EXIF ColorSpace’, ‘EXIF ExifVersion’, ‘Thumbnail ResolutionUnit’, ‘Thumbnail YResolution’, ‘Interoperability InteroperabilityVersion’, ‘GPS GPSDate’, ‘EXIF DateTimeOriginal’, ‘Image YCbCrPositioning’, ‘EXIF InteroperabilityOffset’, ‘Thumbnail JPEGInterchangeFormat’, ‘EXIF ExifImageLength’, ‘Image ResolutionUnit’, ‘EXIF ExposureTime’, ‘Thumbnail XResolution’, ‘Image GPSInfo’, ‘Thumbnail JPEGInterchangeFormatLength’, ‘Thumbnail Compression’, ‘EXIF ExifImageWidth’, ‘JPEGThumbnail’, ‘GPS GPSTimeStamp’, ‘EXIF DateTimeDigitized’, ‘EXIF FocalLength’, ‘Image Model’, ‘Image XResolution’, ‘Image Make’, ‘EXIF ISOSpeedRatings’, ‘Image YResolution’, ‘Interoperability InteroperabilityIndex’] 這個list就是照片中所有的參數，他們的值我們都可以通過獲得，比如我們想知道這張照片是什麼時候拍的，就可以下面的代碼獲得： 1print tags['EXIF DateTimeOriginal'] 2. 文件操作複製1shutuil.copy(src, dst) 剪切1shutuil.move(src, dst) 新建目錄1234567os.mkdir(path, mode)# Super-mkdir;# create a leaf directory and all intermediate ones.# Works like mkdir, except that any intermediate path# segment (not just the rightmost) will be created if it does not exist.# This is recursive.os.makedirs(path, mode) 重命名1os.rename(src, dst) 使用os.system實現複製，剪切新建，重命名可以直接調用os提供的函數實現文件的操作，比如下面的： 1234567import osos.system('mkdir /home/code') # 新建文件夾os.system('cp 1.jpg 2.jpg') # 複製os.system('mv 1.jpg 2.jpg') # 重命名os.system('mv 1.jpg /home/2.jpg') # 剪切os.path.isdir('/home') # 判斷是否是目錄os.path.isfile('/home/1.jpg') # 判斷是否是文件 遍歷目錄中的文件1234567# os.walk(top[, topdown=True[, onerror=None[, followlinks=False]]])# root, dirs, files三者的順序不能改變！for root, dirs, files in os.walk(\"/home/vinater/DATA/Pictures/\"): for name in files: # 遍歷文件 print (os.path.join(root, name)) for name in dirs: # 遍歷目錄中的文件 print (os.path.join(root, name)) os.walk返回一個三元組，分別是根目錄root，文件files和文件夾dirs； 分離路徑名和基本名1234567# 第一種方法path = '/home/vinater/DATA/Pictures/background'basename = os.path.basename(path)dirname = os.path.dirname(path)# 第二種方法dirname, basename = os.path.split(path) 分離基本名和擴展名第一種方法直接使用splitext: 1root, extension = os.path.splitext(fname) 第二種方法使用split 123456for root,dirs,files in os.walk('/home/vinater/DATA/Pictures/background'): for name in files: # 分別是前綴名和後綴名 print str.split(name,'.')[0], str.split(name,'.')[1] for name in dirs: print str.split(name,'.')[0], str.split(name,'.')[1] 三、開始編程123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106# coding: utf-8import exifreadimport osimport shutilimport hashlibclass Photo: def __init__(self, fromPath, toPath): # source path where your photos are self.fromPath = fromPath # destination path where put your photos to self.toPath = toPath # counter self.totalPhotos = 1 self.md5List = [] self.samePhotos = 0 self.picFormats = ['.jpg','.JPG','.jpeg','.JPEG','.png','.PNG'] def getYMD(self, filename): \"\"\" Get year, month, day, hour, minute, second of the image :param filename: file name of the image :return: year, month, day, hour, minute, second \"\"\" file = open(filename) r,e = os.path.split(filename) if e in self.picFormats: md5 = hashlib.md5(open(filename).read()).hexdigest() if(md5 not in self.md5List): self.md5List.append(md5) else: print '!!Find the same files!!' self.samePhotos += 1 return None,None,None,None,None,None # tags is a dictionary stores image's exif information tags = exifread.process_file(file) # if do not find exif information, set default date if len(tags) == 0: date = '1970:01:01' time = '00:00:00' else: # temp has the format \"1970:01:01 00:00:00\" if tags.has_key('EXIF DateTimeOriginal'): temp = str(tags['EXIF DateTimeOriginal']) elif tags.has_key('Image DateTime'): temp = str(tags['Image DateTime']) else: temp = '1970:01:01 00:00:00' date, time = str.split(temp, ' ') year, month, day = date.split(':') hour, minute, second = time.split(':') return year, month, day, hour, minute, second def renameAllFiles(self): \"\"\" Rename all images and move to property location :return: none \"\"\" if os.path.isdir(self.fromPath): # traversal all file in source path for root, dirs, files in os.walk(self.fromPath): for name in files: print root, name if (root[-1] != '/'): filename = str(root) + '/' + str(name) else: filename = str(root) + str(name) # get root and extension name r, extension = os.path.splitext(filename) # get date year, month, day, hour, min, sec = self.getYMD(filename) if year == None: continue # get new file name newFileName = str(year) + '-' + str(month) + '-' + str(day) + '-' + str(hour) + ':' + str( min) + '-' + str(self.totalPhotos) + extension # judge whether the folder exists, if not, make directory save2Path = self.toPath + '/' + year + '/' + year + '-' + month if (not os.path.isdir(save2Path)): os.makedirs(save2Path) # counter plus 1 self.totalPhotos += 1 # move file to property place shutil.move(filename, save2Path + '/' + newFileName) def removeEmptyFolders(self, path): \"\"\" remove empty folders :param path: remove empty folder under path :return: none \"\"\" for root, dirs, files in os.walk(path): for dir in dirs: if os.listdir(root + '/' + dir) == []: os.rmdir(root + '/' + dir) def getMd5(self,filename): return hashlib.md5(open(filename,'rb').read()).hexdigest()src = raw_input('Enter source path:').encode('utf-8')dst = raw_input('Enter destination path:').encode('utf-8')p = Photo(src, dst)p.renameAllFiles()p.removeEmptyFolders(p.fromPath)print 'Total images: %d \\nTotal same images: %d' % (p.totalPhotos, p.samePhotos)","categories":[{"name":"技术杂谈","slug":"技术杂谈","permalink":"kabibi.github.io/categories/技术杂谈/"}],"tags":[{"name":"编程","slug":"编程","permalink":"kabibi.github.io/tags/编程/"},{"name":"Python","slug":"Python","permalink":"kabibi.github.io/tags/Python/"}]}]}